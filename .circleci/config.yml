version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.12.0
  aws-cli: circleci/aws-cli@2.0
  aws-eks: circleci/aws-eks@0.2.3

# commands:
#   destroy-environment:
#     description: Destroy APP cloudformation stacks given a workflow ID.
#     parameters:
#       # Add parameter here   
#     steps:
#       - run:
#           name: Delete S3 content
#           when: on_fail
#           command: |
#             aws s3 rm s3://awscicd-${CIRCLE_WORKFLOW_ID:0:7} --recursive
#             exit 0
#       - run:
#           name: Destroy environments
#           when: on_fail
#           command: |
#             aws cloudformation --region eu-central-1 delete-stack --stack-name awscicd-${CIRCLE_WORKFLOW_ID:0:7}
#             exit 0

jobs:
  build-app:
    docker:
      - image: circleci/node:16.13.0
    steps:
      - checkout
      - run:
          name: Build front-end
          command: |
            # Your code here
            sudo npm i
            npm run build
      - save_cache:
          key: frontend-build
          paths: [node_modules]
  lint-app:
    docker:
      - image: circleci/node:16.13.0
    steps:
      # Checkout code from git
      - checkout
      # Restore from cache
      - restore_cache:
          key: frontend-build
      # Your job code here
      - run:
          name: lint app
          command: |
            # Your code here
            npm run lint
  lint-docker:
    docker:
      - image: python:3.7.3-stretch
    steps:
      # Checkout code from git
      - checkout
      # Restore from cache
      - restore_cache:
          key: frontend-build
      # Your job code here
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            hadolint ./Dockerfile
  test-app:
    docker:
      - image: circleci/node:16.13.0
    steps:
      # Checkout code from git
      - checkout
      # Restore from cache
      - restore_cache:
          key: frontend-build
      # Your job code here
      - run:
          name: test frontend
          command: |
            # Your code here
            npm run test:coverage
  push-app:
    machine: true
    steps:
      - checkout
      - run:
          name: Build docker container
          command: |
                docker login --username ${DOCKER_USR} --password ${DOCKER_PSW}
                docker build -t awscicd:latest .
                docker images ls
                docker tag awscicd ${DOCKER_USR}/awscicd:latest
                docker push ${DOCKER_USR}/awscicd:latest

workflows:
  default:
    jobs:
      - build-app
      - lint-app:
          requires: [build-app]
      - lint-docker:
          requires: [build-app]
      - test-app:
          requires: [build-app]
      - push-app:
          requires: [test-app, lint-app, lint-docker]
          filters:
            branches:
              only: [main]